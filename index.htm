<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no, viewport-fit=cover">
    <title>Выбор Дат</title>
    <!-- Подключаем стили для календаря -->
    <link href="https://cdn.jsdelivr.net/npm/vanilla-js-calendar@2.6.2/build/vanilla-js-calendar.min.css" rel="stylesheet">
    <style>
        :root {
            --tg-bg: var(--tg-theme-bg-color, #ffffff);
            --tg-text: var(--tg-theme-text-color, #222222);
            --tg-hint: var(--tg-theme-hint-color, #999999);
            --tg-button: var(--tg-theme-button-color, #2481cc);
            --tg-button-text: var(--tg-theme-button-text-color, #ffffff);
        }
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
            background-color: var(--tg-bg);
            color: var(--tg-text);
            margin: 0;
            padding: 15px;
            display: flex;
            flex-direction: column;
            height: 100vh;
            box-sizing: border-box;
            -webkit-font-smoothing: antialiased;
        }
        #calendar-container {
            width: 100%;
            max-width: 400px;
            margin: 0 auto;
            flex-shrink: 0;
        }
        #confirm-button {
            font-family: inherit;
            font-weight: 600;
            font-size: 16px;
            width: 100%;
            padding: 15px;
            margin-top: 15px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            background-color: var(--tg-button);
            color: var(--tg-button-text);
        }
        #confirm-button:disabled { opacity: 0.5; cursor: not-allowed; }
        .info-panel {
            text-align: center;
            padding: 10px;
            background-color: rgba(128,128,128,0.1);
            border-radius: 8px;
            margin-bottom: 15px;
            font-size: 14px;
        }
         /* Стили календаря */
        .vanilla-js-calendar{position:relative;display:flex;flex-direction:column;width:100%}.vanilla-js-calendar *,.vanilla-js-calendar *:before,.vanilla-js-calendar *:after{box-sizing:border-box}.vanilla-js-calendar-header{display:flex;align-items:center;padding:10px 15px}.vanilla-js-calendar-header-btn{display:flex;align-items:center;justify-content:center;width:32px;height:32px;border:0;border-radius:.25rem;background:0 0;cursor:pointer;transition:background .2s,color .2s;color:var(--tg-text);-webkit-appearance:none;-moz-appearance:none;appearance:none}.vanilla-js-calendar-header-btn:hover{background:rgba(128,128,128,.1)}.vanilla-js-calendar-month,.vanilla-js-calendar-year{font-weight:700;margin:0 5px;flex-grow:1;text-align:center}.vanilla-js-calendar-week{display:grid;grid-template-columns:repeat(7,1fr);margin-bottom:5px;color:var(--tg-hint)}.vanilla-js-calendar-day{text-align:center;padding:5px}.vanilla-js-calendar-days{display:grid;grid-template-columns:repeat(7,1fr)}.vanilla-js-calendar-day__btn{display:flex;align-items:center;justify-content:center;width:100%;height:32px;padding:5px;border:0;border-radius:.25rem;background:0 0;cursor:pointer;transition:background .2s,color .2s;color:var(--tg-text)}.vanilla-js-calendar-day__btn_today{background:rgba(128,128,128,.1);color:var(--tg-link)}.vanilla-js-calendar-day__btn_selected{background:var(--tg-button)!important;color:var(--tg-button-text)!important}.vanilla-js-calendar-day__btn_disabled{cursor:not-allowed;opacity:.5;text-decoration:line-through}
    </style>
</head>
<body>

    <div id="calendar-container"></div>
    <div class="info-panel" id="info-panel">Загрузка...</div>
    <button id="confirm-button" disabled>Подтвердить</button>
    
    <!-- Переносим все скрипты в конец body - это самый надежный способ -->
    <script src="https://telegram.org/js/telegram-web-app.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vanilla-js-calendar@2.6.2/build/vanilla-js-calendar.min.js"></script>
    
    <script>
        // Мы можем быть уверены, что к этому моменту весь HTML и скрипты выше загружены
        try {
            const tg = window.Telegram.WebApp;
            const confirmButton = document.getElementById('confirm-button');
            const infoPanel = document.getElementById('info-panel');

            tg.ready();
            tg.expand();
            
            const urlParams = new URLSearchParams(window.location.search);
            const propertyId = urlParams.get('property_id');

            if (!propertyId) {
                infoPanel.textContent = "Ошибка: не найден ID объекта.";
            } else {
                // --- ИЗМЕНЕНИЕ: Используем "искусственные" (mock) данные вместо fetch ---
                // Это позволяет нам отладить календарь без зависимости от ngrok и бэкенда.
                infoPanel.textContent = "Выберите дату заезда";
                // Представим, что с сервера пришли вот такие занятые даты:
                const mockDisabledDates = ["2025-07-10", "2025-07-11", "2025-07-18", "2025-08-01"];
                initializeCalendar(mockDisabledDates);
            }

            function initializeCalendar(disabledDates) {
                const options = {
                    type: 'multiple',
                    settings: {
                        range: { 
                            disablePast: true,
                            disabled: disabledDates 
                        },
                        selection: { 
                            day: 'multiple-ranged', // Позволяет выбирать диапазон
                        },
                        visibility: { 
                            theme: tg.colorScheme === 'dark' ? 'dark' : 'light',
                            controls: true 
                        },
                    },
                    actions: {
                        clickDay(event, self) {
                            // self.selectedDates теперь содержит массив выбранных дат
                            updateSelection(self.selectedDates);
                        }
                    }
                };
                // VanillaCalendar теперь точно определен
                const calendar = new VanillaCalendar('#calendar-container', options);
                calendar.init();
            }

            let checkinDate = null;
            let checkoutDate = null;

            function updateSelection(selectedDates) {
                 if (selectedDates.length >= 2) {
                    // Сортируем на случай, если пользователь выбрал дату выезда раньше даты заезда
                    const sortedDates = selectedDates.sort((a, b) => new Date(a) - new Date(b));
                    checkinDate = sortedDates[0];
                    checkoutDate = sortedDates[sortedDates.length - 1];
                    infoPanel.textContent = `Заезд: ${formatDate(checkinDate)}, Выезд: ${formatDate(checkoutDate)}`;
                    confirmButton.disabled = false;
                } else if (selectedDates.length === 1) {
                    checkinDate = sortedDates[0];
                    checkoutDate = null;
                    infoPanel.textContent = `Заезд: ${formatDate(checkinDate)}. Выберите дату выезда.`;
                    confirmButton.disabled = true;
                } else {
                    checkinDate = null;
                    checkoutDate = null;
                    infoPanel.textContent = 'Выберите дату заезда';
                    confirmButton.disabled = true;
                }
            }
            
            function formatDate(dateString) {
                const d = new Date(dateString);
                return `${String(d.getDate()).padStart(2, '0')}.${String(d.getMonth() + 1).padStart(2, '0')}`;
            }

            confirmButton.addEventListener('click', function () {
                if (checkinDate && checkoutDate) {
                    const dataToSend = {
                        property_id: propertyId,
                        checkin_date: checkinDate,
                        checkout_date: checkoutDate
                    };
                    tg.sendData(JSON.stringify(dataToSend));
                    tg.close();
                }
            });
        } catch (e) {
            // Если что-то пошло не так, выводим ошибку на экран
            document.getElementById('info-panel').textContent = `Критическая ошибка: ${e.message}`;
        }
    </script>
</body>
</html>
