<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <title>Диагностика Сети</title>
    <style>
        :root {
            --tg-bg: var(--tg-theme-bg-color, #ffffff);
            --tg-text: var(--tg-theme-text-color, #222222);
            --tg-hint: var(--tg-theme-hint-color, #999999);
        }
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
            background-color: var(--tg-bg);
            color: var(--tg-text);
            margin: 0;
            padding: 15px;
            box-sizing: border-box;
        }
        .info-panel {
            text-align: center;
            padding: 20px;
            background-color: rgba(128,128,128,0.1);
            border-radius: 8px;
            margin-bottom: 15px;
            font-size: 16px;
            font-weight: 500;
        }
        #debug-panel {
            padding: 10px;
            font-family: monospace;
            font-size: 12px;
            color: var(--tg-hint);
            border-top: 1px solid var(--tg-hint);
            word-break: break-all;
        }
    </style>
</head>
<body>
    <div class="info-panel" id="info-panel">Запускаю тест сети...</div>
    <div id="debug-panel">
        <p><strong>Техническая информация:</strong></p>
    </div>

    <script src="https://telegram.org/js/telegram-web-app.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const tg = window.Telegram.WebApp;
            const infoPanel = document.getElementById('info-panel');
            const debugPanel = document.getElementById('debug-panel');

            function logDebug(message) {
                const p = document.createElement('p');
                p.style.margin = '2px 0';
                p.textContent = `> ${message}`;
                debugPanel.appendChild(p);
            }

            tg.ready();
            tg.expand();

            // Используем общедоступный тестовый API вместо ngrok
            const testApiUrl = "https://jsonplaceholder.typicode.com/todos/1";
            logDebug(`Connecting to TEST API: ${testApiUrl}`);

            fetch(testApiUrl)
            .then(response => {
                logDebug(`Received response with status: ${response.status}`);
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                logDebug("Response OK. Parsing JSON...");
                return response.json();
            })
            .then(data => {
                logDebug("Successfully parsed JSON data.");
                logDebug(`Data: ${JSON.stringify(data)}`);
                infoPanel.textContent = "✅ Тест сети успешен!";
                infoPanel.style.backgroundColor = 'rgba(76, 175, 80, 0.2)';
                infoPanel.style.color = '#4CAF50';
            })
            .catch(error => {
                console.error('Fetch Error:', error);
                logDebug(`FETCH FAILED: ${error.message}`);
                infoPanel.textContent = "❌ Тест сети провалился.";
                infoPanel.style.backgroundColor = 'rgba(244, 67, 54, 0.2)';
                infoPanel.style.color = '#F44336';
            });
        });
    </script>
</body>
</html>
